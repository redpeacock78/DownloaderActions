name: DownloaderAction
on:
  repository_dispatch:
    types:
      - downloaderaction-media

jobs:
  run:
    runs-on: ubuntu-latest
    name: Run
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14"
      - name: Create directory
        shell: bash
        run: mkdir -p download
      - name: Masking Secrets
        shell: bash
        run: |
          echo -n '::add-mask::' >> secrets.txt && \
          jq -r .client_payload.link < "${GITHUB_EVENT_PATH}" >> secrets.txt && \
          echo -n '::add-mask::' >> secrets.txt && \
          jq -r .client_payload.channel < "${GITHUB_EVENT_PATH}" >> secrets.txt && \
          echo -n '::add-mask::' >> secrets.txt && \
          jq -r .client_payload.message < "${GITHUB_EVENT_PATH}" >> secrets.txt && \
          cat secrets.txt && \
          rm -rf secrets.txt
      - name: Confirmation of link survival
        id: link_status
        shell: bash
        run: |
          if [[ ${{ toJSON(github.event.client_payload.link) }} =~ ^http.*$ ]]; then
            status="$(curl -siL ${{ toJSON(github.event.client_payload.link) }} -o /dev/null -w '%{http_code}\n';:)"
            if [[ "${status}" != "200" && "${status}" != "302" ]]; then
              status="notfound" && \
              echo "status=${status}" >> "$GITHUB_OUTPUT" && \
              exit 2
            fi
          fi
      - name: Install yt-dlp
        if: ${{ success() }}
        shell: bash
        run: |
          sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp
          sudo chmod a+rx /usr/local/bin/yt-dlp
      - name: Start Docker
        if: ${{ success() }}
        timeout-minutes: 300
        shell: bash
        run: |
          cd download && \
          yt-dlp --quiet ${{ toJSON(github.event.client_payload.link) }}
      - name: Upload files
        if: ${{ success() }}
        id: upload
        shell: bash
        run: |
          cd download && \
          file="$(ls)"
          if (( "$(wc -c < "${file}")" <= 26214400 )); then
            curl -s -X POST \
            ${{ secrets.ENDPOINT_URL }} \
            -H 'Content-Type: multipart/form-data' \
            -F channel=${{ toJSON(github.event.client_payload.channel) }} \
            -F message=${{ toJSON(github.event.client_payload.message) }} \
            -F type="$(file --mime-type "${file}")"
            -F "file=@${file}"
          else
            curl -s -X POST \
            ${{ secrets.ENDPOINT_URL }} \
            -H "Accept: application/json" \
            -H "Content-type: application/json" \
            -d @- <<EOF
          {
            "status": "failure",
            "channel": ${{ toJSON(github.event.client_payload.channel) }},
            "message": ${{ toJSON(github.event.client_payload.message) }},
            "link": ${{ toJSON(github.event.client_payload.link) }},
            "content": "Sorry! It seems the file was larger than 25MB."
          }
          EOF
          fi
      - name: Download file not found
        if: >-
          ${{
            failure() &&
            steps.link_status.outputs.status != ''
          }}
        shell: bash
        run: |
          curl -s -X POST \
            ${{ secrets.ENDPOINT_URL }} \
            -H "Accept: application/json" \
            -H "Content-type: application/json" \
            -d @- <<EOF
          {
            "status": "failure",
            "channel": ${{ toJSON(github.event.client_payload.channel) }},
            "message": ${{ toJSON(github.event.client_payload.message) }},
            "link": ${{ toJSON(github.event.client_payload.link) }},
            "content": "Sorry! This link has expired."
          }
          EOF
      - name: Download timed out
        if: >-
          ${{
            failure() &&
            steps.link_status.outputs.status == ''
          }}
        shell: bash
        run: |
          curl -s -X POST \
            ${{ secrets.ENDPOINT_URL }} \
            -H "Accept: application/json" \
            -H "Content-type: application/json" \
            -d @- <<EOF
          {
            "status": "failure",
            "channel": ${{ toJSON(github.event.client_payload.channel) }},
            "message": ${{ toJSON(github.event.client_payload.message) }},
            "link": ${{ toJSON(github.event.client_payload.link) }},
            "content": "Sorry! Processing time exceeded 5 hours and timed out."
          }
          EOF
