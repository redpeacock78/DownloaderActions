name: DownloaderAction
on:
  repository_dispatch:
    types:
      - downloaderaction

jobs:
  run:
    runs-on: ubuntu-latest
    name: Run
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Create directory
        shell: bash
        run: mkdir -p download
      - name: Mask secret
        shell: bash
        run: |
          echo -n '::add-mask::' > cmd.txt && \
          jq < "${GITHUB_EVENT_PATH}" -r .client_payload.link >> cmd.txt && \
          jq < "${GITHUB_EVENT_PATH}" -r .client_payload.channel >> cmd.txt && \
          jq < "${GITHUB_EVENT_PATH}" -r .client_payload.message >> cmd.txt && \
          cat cmd.txt && \
          rm -rf cmd.txt
      - name: Confirmation of link survival
        id: link_status
        shell: bash
        run: |
          if [[ ${{ toJSON(github.event.client_payload.link) }} =~ ^http.*$ ]]; then
            status="$(curl -siL ${{ toJSON(github.event.client_payload.link) }} -o /dev/null -w '%{http_code}\n')"
            if [[ "${status}" != "200" ]]; then
              message="Sorry! This link has expired." && \
              echo "::set-output name=message::${message}" && \
              exit 2
            fi
          fi
      - name: Start Docker
        if: ${{ success() }}
        timeout-minutes: 300
        shell: bash
        run: |
          cd download && \
          docker run --rm -i \
            -p 6988:6988 \
            -p 6982:6982/udp \
            -v $(pwd):/download \
            redpeacock78/downloaderaction:latest \
            ${{ toJSON(github.event.client_payload.link) }}
      - name: Upload files to anonfiles
        if: ${{ success() }}
        id: anonfiles
        shell: bash
        run: |
          cd download && \
          file="$(ls)" && \
          json="$(curl -s -F "file=@${file}" https://api.anonfiles.com/upload)" && \
          echo "::set-output name=json::${json}"
      - name: "If successful: Access callback URL"
        if: ${{ success() }}
        shell: bash
        run: |
          cd download && \
          id="${{ fromJson(steps.anonfiles.outputs.json).data.file.metadata.id }}" && \
          file="${{ fromJson(steps.anonfiles.outputs.json).data.file.metadata.name }}" && \
          link="https://anonfiles-api.vercel.app/${id}/${file}" && \
          LINK="$(node -e "console.log(encodeURI('${link}'))")" && \
          size="$(ls -lh|awk '{print $5}')" && \
          type="$(file "${file}"|awk -F : '{sub(/^ /,"",$2);print $2}')" && \
          curl -s -X POST \
            ${{ secrets.ENDPOINT_URL }} \
            -H "Accept: application/json" \
            -H "Content-type: application/json" \
            -d @- <<EOF
          {
            "status": "success",
            "channel": ${{ toJSON(github.event.client_payload.channel) }},
            "message": ${{ toJSON(github.event.client_payload.message) }},
            "title": "${file}",
            "size": "${size}",
            "type": "${type}",
            "link": "${LINK}"
          }
          EOF
      - name: Not Found
        if: >-
          ${{
            failure() &&
            steps.link_status.outputs.message != ''
          }}
        shell: bash
        run: |
          curl -s -X POST \
            ${{ secrets.ENDPOINT_URL }} \
            -H "Accept: application/json" \
            -H "Content-type: application/json" \
            -d @- <<EOF
          {
            "status": "failure",
            "channel": ${{ toJSON(github.event.client_payload.channel) }},
            "message": ${{ toJSON(github.event.client_payload.message) }},
            "link": ${{ toJSON(github.event.client_payload.link) }},
            "content": "${{ steps.link_status.outputs.message }}"
          }
          EOF
      - name: Time Out
        if: >-
          ${{
            failure() &&
            steps.link_status.outputs.message == ''
          }}
        shell: bash
        run: |
          curl -s -X POST \
            ${{ secrets.ENDPOINT_URL }} \
            -H "Accept: application/json" \
            -H "Content-type: application/json" \
            -d @- <<EOF
          {
            "status": "failure",
            "channel": ${{ toJSON(github.event.client_payload.channel) }},
            "message": ${{ toJSON(github.event.client_payload.message) }},
            "link": ${{ toJSON(github.event.client_payload.link) }},
            "content": "Sorry! Processing time exceeded 5 hours and timed out."
          }
          EOF
